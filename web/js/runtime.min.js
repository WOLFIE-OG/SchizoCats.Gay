const uploadSection = document.getElementById("upload_section");
const videoCount = document.getElementById("video_count");
const uploadInputText = document.getElementById("upload_input_text");
const uploadSectionButtons = document.getElementById("upload_section_buttons");
const mainSection = document.getElementById("main_section");
const mainSectionButtons = document.getElementById("main_section_buttons");
const catPlayerNearly = document.getElementById("cat_player_nearly");
const player = document.getElementById("cat_player_actual");
const nextCat = document.getElementById("next_cat_video");
const copyCat = document.getElementById("copy_cat_url");
const dropZone = document.getElementById("drop_zone");
const loading = document.getElementById("loading_animation");
let responseUrl = null;
const files = [];

async function getSetMedia(url) {
    catPlayerNearly.style.display = "none";
    loading.style.display = "";

    try {
        const response = await fetch(url);
        if (response.ok) {
            const responseData = await response.json();
            responseUrl = `web/content/${responseData.file_id}.${responseData.ext}`;
            player.src = responseUrl.replace(/['"]+/g, "");
            player.play();
            catPlayerNearly.style.display = "";
            loading.style.display = "none";
        } else {
            console.error(response.statusText);
            toastr.error("There was an error.", "Error Fetching Cat 🙁!");
        }
    } catch (error) {
        console.error(error);
        toastr.error("An error occurred while fetching the cat 🙁!");
    }
}

async function getCount() {
    try {
        const response = await fetch("api/get_count");
        if (response.ok) {
            const responseData = await response.json();
            videoCount.innerText = responseData.count;
        } else {
            console.error(response.statusText);
        }
    } catch (error) {
        console.error(error);
    }
}

function changeToHome() {
    uploadSection.hidden = true;
    uploadSectionButtons.hidden = true;
    mainSection.hidden = false;
    mainSectionButtons.hidden = false;
}

function changeToUpload() {
    uploadSection.hidden = false;
    uploadSectionButtons.hidden = false;
    mainSection.hidden = true;
    mainSectionButtons.hidden = true;
}

function meow() {
    const randomMeow = ["web/audio/Cat_Meow_1.mp3", "web/audio/Cat_Meow_2.mp3", "web/audio/Cat_Meow_3.mp3", "web/audio/Cat_Meow_4.mp3"];
    const audio = new Audio(randomMeow[Math.floor(Math.random() * randomMeow.length)]);
    audio.volume = 0.2;
    audio.play();
}

function mouseDown() {
    const audio = new Audio("web/audio/Mouse_Click_Down.mp3");
    audio.volume = 0.1;
    audio.play();
}

function mouseUp() {
    const audio = new Audio("web/audio/Mouse_Click_Up.mp3");
    audio.volume = 0.1;
    audio.play();
}

function dropHandler(e) {
    e.preventDefault(),
        e.dataTransfer.items
            ? [...e.dataTransfer.items].forEach((e, n) => {
                  if ("file" === e.kind) {
                      let t = e.getAsFile();
                      files.push(t);
                  }
              })
            : [...e.dataTransfer.files].forEach((e, n) => {
                  files.push(e);
              }),
        (drop_zone.innerText = `Files selected: (${files.length})`);
}

function dragOverHandler(e) {
    e.preventDefault();
}

document.addEventListener("click", () => {
    if (Math.floor(Math.random() * 10) === 9) {
        meow();
    }
});

document.addEventListener("dblclick", () => {
    const angle = Math.random() * (125 - 55) + 55;
    const spread = Math.random() * (70 - 50) + 50;
    const particleCount = Math.random() * (100 - 50) + 50;
    confetti({
        angle,
        spread,
        particleCount,
        origin: { y: Math.random(), x: Math.random() },
    });
    const audio = new Audio("web/audio/Confetti.mp3");
    audio.volume = 0.1;
    audio.play();
});

document.addEventListener("mousedown", mouseDown);
document.addEventListener("mouseup", mouseUp);

nextCat.addEventListener("click", () => {
    getSetMedia("api/get_cat");
});

copyCat.addEventListener("click", () => {
    navigator.clipboard.writeText(player.src);
    toastr.info("Copied media URL to clipboard!");
    toastr.options.onShown = () => {
        const audio = new Audio("web/audio/Hi.mp3");
        audio.volume = 0.1;
        audio.play();
    };
    toastr.options.onHidden = () => {
        const audio = new Audio("web/audio/Bye.mp3");
        audio.volume = 0.1;
        audio.play();
    };
});

upload_files.addEventListener("click", () => {
    const formData = new FormData();
    for (const file of files) {
        formData.append("files", file);
    }

    fetch("api/upload", {
        method: "POST",
        body: formData,
    })
        .then((response) => {
            if (response.ok) {
                return response.json();
            } else {
                throw new Error(`HTTP error! Status: ${response.status}`);
            }
        })
        .then((data) => {
            toastr.success(`[${data.successfull} / ${data.total}] files uploaded.`, "Success!");
            files.length = 0;
            dropZone.innerText = "Drag and drop files.";
            getCount();
        })
        .catch((error) => {
            console.error("Error uploading files:", error);
            toastr.error(error, "Error!");
        });
});

upload_input.addEventListener("click", () => {
    toastr.info(`Attempting to download ${uploadInputText.value}`, "Fetching...");
    fetch(`api/upload/external?url=${uploadInputText.value}`, {
        method: "GET",
    })
        .then((response) => {
            if (response.ok) {
                return response.json();
            } else if (response.status == 403) {
                throw new Error("File is already uploaded!");
            } else {
                throw new Error(`HTTP error! Status: ${response.status}`);
            }
        })
        .then((data) => {
            toastr.success(`${data.msg}`, "Success!");
            getCount();
        })
        .catch((error) => {
            console.error("Error uploading file:", error);
            toastr.error(error, "Error!");
        });
});

window.addEventListener("load", () => {
    getSetMedia("api/get_cat");
    getCount();
    new cursoreffects.rainbowCursor({});
});

player.volume = 0.5;
